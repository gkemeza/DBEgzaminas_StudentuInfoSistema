// <auto-generated />
using System;
using DBEgzaminas_StudentuInfoSistema.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBEgzaminas_StudentuInfoSistema.Migrations
{
    [DbContext(typeof(StudentsContext))]
    [Migration("20240917151619_InitialStructure")]
    partial class InitialStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBEgzaminas_StudentuInfoSistema.Database.Entities.Departament", b =>
                {
                    b.Property<string>("DepartamentCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("DepartamentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartamentCode");

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("DBEgzaminas_StudentuInfoSistema.Database.Entities.Lecture", b =>
                {
                    b.Property<int>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LectureId"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("LectureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Weekday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LectureId");

                    b.HasIndex("LectureName")
                        .IsUnique();

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("DBEgzaminas_StudentuInfoSistema.Database.Entities.Student", b =>
                {
                    b.Property<int>("StudentNumber")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentNumber"));

                    b.Property<string>("DepartamentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentNumber");

                    b.HasIndex("DepartamentCode");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DepartamentLecture", b =>
                {
                    b.Property<string>("DepartamentsDepartamentCode")
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("LecturesLectureId")
                        .HasColumnType("int");

                    b.HasKey("DepartamentsDepartamentCode", "LecturesLectureId");

                    b.HasIndex("LecturesLectureId");

                    b.ToTable("DepartamentLecture");
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.Property<int>("LecturesLectureId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsStudentNumber")
                        .HasColumnType("int");

                    b.HasKey("LecturesLectureId", "StudentsStudentNumber");

                    b.HasIndex("StudentsStudentNumber");

                    b.ToTable("LectureStudent");
                });

            modelBuilder.Entity("DBEgzaminas_StudentuInfoSistema.Database.Entities.Student", b =>
                {
                    b.HasOne("DBEgzaminas_StudentuInfoSistema.Database.Entities.Departament", "Departament")
                        .WithMany("Students")
                        .HasForeignKey("DepartamentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("DepartamentLecture", b =>
                {
                    b.HasOne("DBEgzaminas_StudentuInfoSistema.Database.Entities.Departament", null)
                        .WithMany()
                        .HasForeignKey("DepartamentsDepartamentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBEgzaminas_StudentuInfoSistema.Database.Entities.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LecturesLectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.HasOne("DBEgzaminas_StudentuInfoSistema.Database.Entities.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LecturesLectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBEgzaminas_StudentuInfoSistema.Database.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DBEgzaminas_StudentuInfoSistema.Database.Entities.Departament", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
